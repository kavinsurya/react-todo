{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","strike","Unstrike","removeTodo","className","style","textDecoration","isCompleted","text","onClick","TodoForm","addTodo","React","useState","value","setValue","onSubmit","e","preventDefault","type","onChange","target","App","todos","setTodos","newTodos","splice","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAGA,SAASA,EAAT,GAA6D,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,OAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAC5C,OACE,sBACEC,UAAU,OACVC,MAAO,CAAEC,eAAgBP,EAAKQ,YAAc,eAAiB,IAF/D,UAIGR,EAAKS,KACN,gCACE,wBAAQC,QAAS,kBAAMR,EAAOD,IAA9B,oBACA,wBAAQS,QAAS,kBAAMP,EAASF,IAAhC,sBACA,wBAAQS,QAAS,kBAAMN,EAAWH,IAAlC,qBAmDR,SAASU,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QAAW,EACHC,IAAMC,SAAS,IADZ,mBACtBC,EADsB,KACfC,EADe,KAU7B,OACE,sBAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACGJ,IACLH,EAAQG,GACRC,EAAS,MAIT,SACE,uBACEI,KAAK,OACLf,UAAU,QACVU,MAAOA,EACPM,SAAU,SAAAH,GAAC,OAAIF,EAASE,EAAEI,OAAOP,YAQ1BQ,MAtEf,WAAgB,IAAD,EACaV,IAAMC,SAAS,IAD5B,mBACNU,EADM,KACCC,EADD,KAQPvB,EAAS,SAAAD,GACb,IAAMyB,EAAQ,YAAOF,GACrBE,EAASzB,GAAOO,aAAc,EAC9BiB,EAASC,IAGLvB,EAAW,SAAAF,GACf,IAAMyB,EAAQ,YAAOF,GACrBE,EAASzB,GAAOO,aAAc,EAC9BiB,EAASC,IAGLtB,EAAa,SAAAH,GACjB,IAAMyB,EAAQ,YAAOF,GACrBE,EAASC,OAAO1B,EAAO,GACvBwB,EAASC,IAGX,OACE,sBAAKrB,UAAU,MAAf,UACE,mBAAGA,UAAU,SAAb,wBACA,sBAAKA,UAAU,YAAf,UACGmB,EAAMI,KAAI,SAAC5B,EAAMC,GAAP,OACT,cAACF,EAAD,CAEEE,MAAOA,EACPD,KAAMA,EACNE,OAAQA,EACRC,SAAUA,EACVC,WAAYA,GALPH,MAQT,cAACU,EAAD,CAAUC,QArCA,SAAAH,GACd,IAAMiB,EAAQ,sBAAOF,GAAP,CAAc,CAAEf,UAC9BgB,EAASC,aCXEG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.b7d526d9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nfunction Todo({ todo, index, strike,Unstrike, removeTodo }) {\n  return (\n    <div\n      className=\"todo\"\n      style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\n    >\n      {todo.text}\n      <div>\n        <button onClick={() => strike(index)}>Strike</button>\n        <button onClick={() => Unstrike(index)}>Unstrike</button>\n        <button onClick={() => removeTodo(index)}>x</button>\n      </div>\n    </div>\n  );\n}\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const strike = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const Unstrike = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = false;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <p className=\"header\">To-Do list</p>\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            strike={strike}\n            Unstrike={Unstrike}\n            removeTodo={removeTodo}\n          />\n        ))}\n        <TodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  );\n}\n\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}